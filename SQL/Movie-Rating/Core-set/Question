Q1. Find the titles of all movies directed by Steven Spielberg. 

select title
from Movie
where director = 'Steven Spielberg'

Q2. Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order. 

select distinct year
from Rating, Movie
where Movie.mID = Rating.mID and (stars = 4 or stars = 5)
order by year

Q3. Find the titles of all movies that have no ratings. 

select title
from Movie
where mID not in (select mID from Rating);

Q4. Some reviewers didn't provide a date with their rating. Find the names of all reviewers who have ratings with a NULL value for the date. 

select name
from Reviewer, Rating
where Reviewer.rID = Rating.rID and ratingDate is null;

Q5. Write a query to return the ratings data in a more readable format: reviewer name, movie title, stars, and ratingDate. Also, sort the data, first by reviewer name, then by movie title, and lastly by number of stars. 

select name, title, stars, ratingDate
from Movie, Reviewer, Rating
where Movie.mID = Rating.mID and Reviewer.rID = Rating.rID
order by name, title, stars

Q6. For all cases where the same reviewer rated the same movie twice and gave it a higher rating the second time, return the reviewer's name and the title of the movie. 

select name, title
from (Movie natural join Reviewer) natural join (select r1.rID, r1.mID, r1.stars, r1.ratingDate from Rating r1, Rating r2 where r1.rID = r2.rID and r1.mID = r2.mID and r1.stars < r2.stars and r1.ratingDate < r2.ratingDate)

Q7. For each movie that has at least one rating, find the highest number of stars that movie received. Return the movie title and number of stars. Sort by movie title. 

select distinct title, max(stars)
from Rating natural join Movie
group by mID
order by title

Q8. List movie titles and average ratings, from highest-rated to lowest-rated. If two or more movies have the same average rating, list them in alphabetical order. 

select title, avg(stars) as avgStars
from Movie natural join Rating
group by mID
order by avgStars desc, title

Q9. Find the names of all reviewers who have contributed three or more ratings. (As an extra challenge, try writing the query without HAVING or without COUNT.) 

select name
from
(select * from Rating
except
select * from (select * from Rating except select * from Rating group by rID) group by rID
except
select * from Rating group by rID) natural join Reviewer

/* alternative option */
select name
from Reviewer natural join Rating
group by rID
having count(*) >= 3
